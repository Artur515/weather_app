{"version":3,"sources":["utils/constants.js","api/index.js","redux/toolKitSlice/index.js","helpers/loader/Loader.jsx","components/error/Error.jsx","components/weatherFullInfo/CustomTypography.jsx","helpers/counting/counting.js","components/temperatureGraph/TemperatureGraph.jsx","components/weatherFullInfo/WeatherFullInfo.jsx","components/weatherCardInfo/WeatherCardInfo.jsx","components/weatherCard/WeatherCard.jsx","routes/routes.js","components/weatherCardList/WeatherCardList.jsx","components/appRouter/AppRouter.jsx","components/navBar/NavBar.jsx","hooks/useDebounce/useDebounce.js","App.jsx","redux/store/index.js","index.js","helpers/loader/style.module.css"],"names":["WEATHER_LIST","API_KEY","process","baseUrl","getWeatherWithId","id","axios","get","toolKitSlice","createSlice","name","initialState","listOfCities","weatherOfCity","fullWeatherInfo","error","reducers","addToListOfCity","state","action","push","payload","removeCity","filter","city","setWeatherOfCity","setFullWeatherInfo","getError","actions","Loader","props","word","split","reverse","className","style","load","map","char","Error","errorPage","useSelector","toolkitReduce","dispatch","useDispatch","history","useHistory","Card","sx","maxWidth","marginTop","CardContent","Typography","fontSize","color","gutterBottom","message","variant","stack","Box","display","alignItems","justifyContent","pl","pb","pt","onClick","CustomTypography","title","text","meaning","margin","countingFunction","sun","timeZone","time","Date","res","getUTCHours","getMinutes","getSeconds","TemperatureGraph","hour","minWidth","height","textAlign","position","bottom","parseInt","main","temp","width","src","weather","icon","alt","description","dt","timezone","WeatherFullInfo","sunrise","sunset","overflowX","minHeight","list","WeatherCardInfo","useState","setLoad","params","useParams","useEffect","then","response","data","catch","finally","padding","CardMedia","component","temp_min","temp_max","humidity","wind","speed","clouds","all","CardActions","Button","WeatherCard","searchCity","setSearchCity","setValue","watchCompareCity","setWatchCompareCity","cityList","to","disabled","find","handleRemoveCity","routes","path","Component","length","AppRouter","exact","StyledInputBase","styled","InputBase","theme","borderBottom","spacing","paddingLeft","transition","transitions","create","breakpoints","up","NavBar","value","setError","debouncedSearch","callback","delay","timer","useRef","debouncedCallback","useCallback","args","current","clearTimeout","setTimeout","useDebounce","query","queryCity","AppBar","marginBottom","Toolbar","flexGrow","xs","sm","placeholder","onChange","event","target","App","listCity","JSON","parse","localStorage","getItem","setItem","stringify","Container","flexWrap","Alert","severity","rootReducer","combineReducers","toolkitReducer","store","configureStore","reducer","ReactDOM","render","basename","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ca1172ab.chunk.js","sourcesContent":["export const WEATHER_LIST = \"/weather\"\r\nexport const WEATHER_CITY_INFO = `/weather/:id`\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY\r\n\r\nconst baseUrl = `https://api.openweathermap.org/data/2.5/`\r\n\r\n\r\nexport const getCityWeather = (queryCity) => {\r\n    return axios.get(baseUrl + `weather?q=${queryCity}&units=metric&appid=${API_KEY}`)\r\n}\r\n\r\nexport const getWeatherWithId = (id) => {\r\n    return axios.get(baseUrl + `weather?id=${id}&units=metric&appid=${API_KEY}`)\r\n}\r\n\r\n\r\nexport const getFullInfo = (id) => {\r\n    return axios.get(baseUrl + `forecast?id=${id}&units=metric&appid=${API_KEY}`)\r\n}\r\n\r\n// export const getOneCallApiWeather = (lat, lon) => {\r\n//     return axios.get(baseUrl + `onecall?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`)\r\n// }\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst toolKitSlice = createSlice({\r\n    name: 'weather',\r\n    initialState: {\r\n        listOfCities: [],\r\n        weatherOfCity: null,\r\n        fullWeatherInfo: null,\r\n        error: null\r\n    },\r\n    reducers: {\r\n\r\n        addToListOfCity(state, action) {\r\n            state.listOfCities.push(...action.payload)\r\n        },\r\n        removeCity(state, action) {\r\n            state.listOfCities = state.listOfCities.filter(city => city.id !== action.payload)\r\n        },\r\n        setWeatherOfCity(state, action) {\r\n            state.weatherOfCity = action.payload\r\n        },\r\n        setFullWeatherInfo(state, action) {\r\n            state.fullWeatherInfo = action.payload\r\n        },\r\n        getError(state, action) {\r\n            state.error = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport default toolKitSlice.reducer\r\nexport const {\r\n    addToListOfCity,\r\n    removeCity,\r\n    setWeatherOfCity,\r\n    setFullWeatherInfo,\r\n    getError\r\n} = toolKitSlice.actions","import React from 'react';\r\nimport style from './style.module.css'\r\n\r\nconst Loader = (props) => {\r\n    const word = props.props.split('').reverse()\r\n\r\n    // console.log(word)\r\n    return (\r\n        <div className={style.load}>\r\n            {word.map((char) => {\r\n                return <div key={char}>{char}</div>\r\n            })}\r\n            {/*<div>G</div>*/}\r\n            {/*<div>N</div>*/}\r\n            {/*<div>I</div>*/}\r\n            {/*<div>D</div>*/}\r\n            {/*<div>A</div>*/}\r\n            {/*<div>O</div>*/}\r\n            {/*<div>L</div>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Box from \"@mui/material/Box\";\r\nimport {getError} from \"../../redux/toolKitSlice\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {WEATHER_LIST} from \"../../utils/constants\";\r\n\r\nconst Error = () => {\r\n    const errorPage = useSelector(state => state.toolkitReduce.error)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const handleDeleteError = () => {\r\n        dispatch(getError(null))\r\n        history.push(WEATHER_LIST)\r\n    }\r\n\r\n    return (\r\n        <Card sx={{maxWidth: 550, marginTop: 5}}>\r\n            <CardContent>\r\n                <Typography sx={{fontSize: 14, color: 'red'}} gutterBottom>\r\n                    {errorPage.message}\r\n                </Typography>\r\n                <Typography variant=\"h5\" sx={{color: 'red'}}>\r\n                    {errorPage.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                    {errorPage.stack}\r\n                </Typography>\r\n            </CardContent>\r\n            <Box  className='cursor'  sx={{display: 'flex', alignItems: 'center', justifyContent: 'space-around', pl: 1, pb: 3, pt: 1}}>\r\n                <CloseIcon onClick={handleDeleteError}/>\r\n            </Box>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Error;","import React from 'react';\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst CustomTypography = ({title, text, meaning}) => {\r\n    return (\r\n        <Box color=\"text.secondary\" sx={{margin: '25px'}}>\r\n            <div>{title}</div>\r\n            <div>{text} {meaning}</div>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CustomTypography;","export const countingFunction = (sun, timeZone=0) => {\r\n    const time = new Date((sun + timeZone) * 1000);\r\n    const res = time.getUTCHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds()\r\n    return res\r\n}","import React from 'react';\r\nimport Card from \"@mui/material/Card\";\r\nimport {countingFunction} from \"../../helpers/counting/counting\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nconst TemperatureGraph = ({hour}) => {\r\n    const fullWeatherInfo = useSelector(state => state.toolkitReduce.fullWeatherInfo)\r\n\r\n\r\n    return (\r\n        <Card sx={{\r\n            minWidth: 80,\r\n            height: 100,\r\n            textAlign: 'center',\r\n            position: 'relative',\r\n            bottom: `${parseInt(hour.main.temp)}px`\r\n        }}>\r\n            <img style={{width: '30px'}} src={`http://openweathermap.org/img/wn/${hour.weather[0].icon}@2x.png`}\r\n                 alt={hour.weather[0].description}/>\r\n            <p>{countingFunction(hour.dt, fullWeatherInfo.city.timezone)}</p>\r\n            <p>{hour.main.temp} Сº</p>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TemperatureGraph;","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport Loader from \"../../helpers/loader/Loader\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport TemperatureGraph from \"../temperatureGraph/TemperatureGraph\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CustomTypography from \"./CustomTypography\";\r\nimport {countingFunction} from \"../../helpers/counting/counting\";\r\n\r\n\r\nconst WeatherFullInfo = () => {\r\n    const fullWeatherInfo = useSelector(state => state.toolkitReduce.fullWeatherInfo)\r\n\r\n    return (<>\r\n            {fullWeatherInfo !== null ?\r\n                <Box>\r\n                    <CardContent sx={{display: 'flex', alignItems: 'center', justifyContent: 'space-around'}}>\r\n                        <CustomTypography\r\n                            title={'Sunrise'}\r\n                            text={countingFunction(fullWeatherInfo.city.sunrise, fullWeatherInfo.city.timezone)}/>\r\n                        <CustomTypography\r\n                            title={'Sunset'}\r\n                            text={countingFunction(fullWeatherInfo.city.sunset, fullWeatherInfo.city.timezone)}/>\r\n                    </CardContent>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        alignItems: 'center',\r\n                        overflowX: 'scroll',\r\n                        maxWidth: '1000px',\r\n                        minHeight: '200px'\r\n                    }}>\r\n                        {fullWeatherInfo.list.map((hour) => {\r\n                            return <TemperatureGraph key={hour.dt} hour={hour}/>\r\n                        })}\r\n                    </div>\r\n                </Box>\r\n                : <Loader props={'Loading'}/>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WeatherFullInfo;","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getFullInfo, getWeatherWithId} from \"../../api\";\r\nimport {setWeatherOfCity, getError, setFullWeatherInfo} from \"../../redux/toolKitSlice\";\r\nimport Loader from \"../../helpers/loader/Loader\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Error from \"../error/Error\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CustomTypography from \"../weatherFullInfo/CustomTypography\";\r\nimport WeatherFullInfo from \"../weatherFullInfo/WeatherFullInfo\";\r\nimport UpdateIcon from '@mui/icons-material/Update';\r\n\r\nconst WeatherCardInfo = () => {\r\n    const [load, setLoad] = useState(false)\r\n    const params = useParams()\r\n    const dispatch = useDispatch()\r\n    const weatherOfCity = useSelector(state => state.toolkitReduce.weatherOfCity)\r\n    const fullWeatherInfo = useSelector(state => state.toolkitReduce.fullWeatherInfo)\r\n    const errorPage = useSelector(state => state.toolkitReduce.error)\r\n\r\n\r\n    useEffect(() => {\r\n        setLoad(true)\r\n        getWeatherWithId(params.id)\r\n            .then(response => dispatch(setWeatherOfCity(response.data)))\r\n            .catch(error => {\r\n                dispatch(getError(error))\r\n                dispatch(setWeatherOfCity(null))\r\n            }).finally(() => setLoad(false))\r\n\r\n        // eslint-disable-next-line\r\n    }, [params.id])\r\n\r\n\r\n    const handleUpdate = () => {\r\n        setLoad(true)\r\n\r\n        getWeatherWithId(params.id)\r\n            .then(response => dispatch(setWeatherOfCity(response.data)))\r\n            .catch(error => {\r\n                dispatch(getError(error))\r\n                dispatch(setWeatherOfCity(null))\r\n            }).finally(() => setLoad(false))\r\n    }\r\n\r\n\r\n    const handleFullInfo = () => {\r\n        setLoad(true)\r\n        getFullInfo(params.id)\r\n            .then(response => {\r\n                dispatch(setFullWeatherInfo(response.data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(getError(error))\r\n                dispatch(setWeatherOfCity(null))\r\n            }).finally(() => setLoad(false))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {load && <Loader props={'Loading'}/>}\r\n            {errorPage && <Error/>}\r\n            {weatherOfCity === null ? <Loader props={'Loading'}/> :\r\n                <Card sx={{padding: '15px'}}>\r\n                    <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'space-around'}}>\r\n                        <CardMedia\r\n                            component=\"img\" sx={{width: 150}}\r\n                            src={`http://openweathermap.org/img/wn/${weatherOfCity?.weather[0].icon}@2x.png`}\r\n                            alt={weatherOfCity?.weather[0].description}/>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            {weatherOfCity?.name}\r\n                        </Typography>\r\n                        <UpdateIcon className='cursor' onClick={handleUpdate}/>\r\n                    </Box>\r\n                    <CardContent sx={{display: 'flex', alignItems: 'center', justifyContent: 'space-around'}}>\r\n                        <CustomTypography title={'Temperature'}\r\n                                          text={parseInt(weatherOfCity?.main.temp)} meaning={' Сº'}/>\r\n                        <CustomTypography title={'Min'}\r\n                                          text={parseInt(weatherOfCity?.main.temp_min)} meaning={' Сº'}/>\r\n                        <CustomTypography title={'Max'}\r\n                                          text={parseInt(weatherOfCity?.main.temp_max)} meaning={' Сº'}/>\r\n                        <CustomTypography title={'Wet'}\r\n                                          text={weatherOfCity?.main.humidity} meaning={'%'}/>\r\n                        <CustomTypography title={'Wind'}\r\n                                          text={weatherOfCity?.wind.speed} meaning={'km/h'}/>\r\n                        <CustomTypography title={'Clouds'}\r\n                                          text={weatherOfCity?.clouds.all} meaning={'%'}/>\r\n                    </CardContent>\r\n                    <CardContent>\r\n                        {fullWeatherInfo && <WeatherFullInfo/>}\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        {fullWeatherInfo ? '' : <Button className='' onClick={handleFullInfo}>More</Button>}\r\n                    </CardActions>\r\n                </Card>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WeatherCardInfo;","import React, {useState} from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addToListOfCity, removeCity} from \"../../redux/toolKitSlice\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst WeatherCard = ({searchCity, setSearchCity, setValue, city}) => {\r\n    const [watchCompareCity, setWatchCompareCity] = useState(false)\r\n    const cityList = useSelector(state => state.toolkitReduce.listOfCities)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const handleAddToList = () => {\r\n        const compareCity = cityList.find(cityList => cityList.id === searchCity.id)\r\n        if (compareCity) {\r\n            setWatchCompareCity(true)\r\n        } else {\r\n            dispatch(addToListOfCity([searchCity]))\r\n            setValue('')\r\n            setWatchCompareCity(false)\r\n            setSearchCity(null)\r\n        }\r\n    }\r\n\r\n\r\n    const handleRemoveCity = (city) => {\r\n        dispatch(removeCity(city.id))\r\n    }\r\n\r\n\r\n    return (\r\n        <Card sx={{width: 300, margin: '20px'}}>\r\n            <CardContent>\r\n\r\n                <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'space-around', pl: 1, pb: 1}}>\r\n                    <Link to={`/weather/${city?.id}`}>\r\n                        <img\r\n                            src={searchCity ?\r\n                                `http://openweathermap.org/img/wn/${searchCity?.weather[0].icon}@2x.png` :\r\n                                `http://openweathermap.org/img/wn/${city?.weather[0].icon}@2x.png`}\r\n                            alt={searchCity?.name || city?.name}/>\r\n                    </Link>\r\n                    <Typography variant=\"h5\">\r\n                        {searchCity?.name || city?.name || 'Name'}\r\n                    </Typography>\r\n                </Box>\r\n\r\n                <Typography variant=\"h6\">\r\n                    temp {parseInt(searchCity?.main.temp) || parseInt(city?.main.temp)} Сº\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    wet {searchCity?.main.humidity || city?.main.humidity} %\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                    wind {searchCity?.wind.speed || city?.wind.speed} km/h\r\n                </Typography>\r\n            </CardContent>\r\n            <Box sx={{display: 'flex', alignItems: 'center', justifyContent: 'space-around', pl: 1, pb: 3, pt: 1}}>\r\n                {searchCity &&\r\n                <Button variant='outlined' color='inherit' disabled={watchCompareCity}\r\n                        onClick={() => handleAddToList()}>\r\n                    {watchCompareCity ? 'This city is on your list' : 'Add to my list'}\r\n                </Button>}\r\n                {city && <DeleteIcon className='cursor' onClick={() => handleRemoveCity(city)}/>}\r\n            </Box>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default WeatherCard;","import {WEATHER_CITY_INFO, WEATHER_LIST} from \"../utils/constants\";\r\nimport WeatherCardInfo from \"../components/weatherCardInfo/WeatherCardInfo\";\r\nimport WeatherCardList from \"../components/weatherCardList/WeatherCardList\";\r\n\r\nexport const routes = [\r\n    {\r\n        path: WEATHER_LIST,\r\n        Component: WeatherCardList\r\n    }, {\r\n        path: WEATHER_CITY_INFO,\r\n        Component: WeatherCardInfo\r\n    }\r\n]\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport WeatherCard from \"../weatherCard/WeatherCard\";\r\n\r\n\r\nconst WeatherCardList = () => {\r\n    const cityList = useSelector(state => state.toolkitReduce.listOfCities)\r\n\r\n    // console.log(cityList)\r\n\r\n    return (\r\n        <>\r\n            {cityList.length <= 0 ?\r\n                <h2>No city list</h2> : <>{cityList.map((city) => {\r\n                    return <WeatherCard key={city?.id} city={city}/>\r\n                })}</>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WeatherCardList;","import React from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {routes} from \"../../routes/routes\";\r\nimport {WEATHER_LIST} from \"../../utils/constants\";\r\n\r\nconst AppRouter = () => {\r\n    return (<Switch>\r\n            {routes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact={true}/>\r\n            )}\r\n            <Redirect to={WEATHER_LIST}/>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React from 'react';\r\nimport {styled} from '@mui/material/styles';\r\nimport {AppBar} from \"@material-ui/core\";\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport {useDebounce} from \"../../hooks/useDebounce/useDebounce\";\r\nimport {getCityWeather} from \"../../api\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {WEATHER_LIST} from \"../../utils/constants\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setFullWeatherInfo, setWeatherOfCity} from \"../../redux/toolKitSlice\";\r\n\r\n\r\nconst StyledInputBase = styled(InputBase)(({theme}) => ({\r\n    borderBottom: '1px solid black',\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst NavBar = ({value, setValue, setError, setSearchCity, setLoad}) => {\r\n        const debouncedSearch = useDebounce(search, 1000)\r\n        const dispatch = useDispatch()\r\n\r\n\r\n        function search(query) {\r\n            getCityWeather(query)\r\n                .then((response) => {\r\n                    setSearchCity(response.data)\r\n                    setLoad(false)\r\n                })\r\n                .catch((error) => {\r\n                        setError(error)\r\n                        setSearchCity(null)\r\n                        setLoad(false)\r\n                    }\r\n                )\r\n        }\r\n\r\n        const handleChange = (event) => {\r\n            setValue(event.target.value)\r\n            debouncedSearch(event.target.value)\r\n            setLoad(true)\r\n        }\r\n\r\n        const handleGoToList = () => {\r\n            setValue('')\r\n            //I don't know exactly if it is necessary or not?\r\n            dispatch(setFullWeatherInfo(null))\r\n            dispatch(setWeatherOfCity(null))\r\n        }\r\n\r\n\r\n        return (<AppBar color='default' position='sticky' style={{marginBottom: 20}}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\" sx={{flexGrow: 1, display: {xs: 'none', sm: 'block'}}}>\r\n                        <Link className='cursor' to={WEATHER_LIST} onClick={handleGoToList}>\r\n                            Weather List\r\n                        </Link>\r\n                    </Typography>\r\n                    <StyledInputBase placeholder=\"Search city…\" value={value} onChange={handleChange}/>\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n;\r\n\r\nexport default NavBar;","import {useCallback, useRef} from \"react\";\r\n\r\nexport const useDebounce = (callback, delay) => {\r\n    const timer = useRef()\r\n\r\n    const debouncedCallback = useCallback((...args) => {\r\n        if (timer.current) {\r\n            clearTimeout(timer.current)\r\n        }\r\n        timer.current = setTimeout(() => {\r\n            callback(...args)\r\n        }, delay)\r\n    }, [callback, delay])\r\n\r\n    return debouncedCallback\r\n}","import AppRouter from \"./components/appRouter/AppRouter\";\nimport NavBar from \"./components/navBar/NavBar\";\nimport {Container} from \"@mui/material\";\nimport Alert from '@mui/material/Alert';\nimport {useEffect, useState} from \"react\";\nimport WeatherCard from \"./components/weatherCard/WeatherCard\";\nimport Loader from \"./helpers/loader/Loader\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addToListOfCity} from \"./redux/toolKitSlice\";\n\n\nconst App = () => {\n    // or you can also make a call on click & redux\n    const [value, setValue] = useState('')\n    const [searchCity, setSearchCity] = useState(null)\n    const [error, setError] = useState(null)\n    const [load, setLoad] = useState(false)\n\n    const cityList = useSelector(state => state.toolkitReduce.listOfCities)\n    const listCity = JSON.parse(localStorage.getItem('cityList'))\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        localStorage.setItem('cityList', JSON.stringify(cityList))\n    }, [cityList])\n\n\n    useEffect(() => {\n        if (listCity) {\n            dispatch(addToListOfCity(listCity))\n        }\n        // eslint-disable-next-line\n    }, [])\n\n\n    useEffect(() => {\n        setSearchCity(null)\n    }, [error])\n\n\n    return (\n        <div>\n            <NavBar value={value} setValue={setValue} setSearchCity={setSearchCity} setError={setError}\n                    setLoad={setLoad}/>\n            <Container sx={{display: 'flex', flexWrap: 'wrap', justifyContent: 'space-around'}}>\n                {load && <Loader props={'Search'}/>}\n                {value === '' ? <AppRouter/> :\n                    <div>{searchCity === null ? <Alert severity=\"error\">City not found</Alert> :\n                        <WeatherCard setValue={setValue} searchCity={searchCity} setSearchCity={setSearchCity}/>}\n                    </div>}\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import {combineReducers, configureStore} from \"@reduxjs/toolkit\";\r\nimport toolkitReducer from \"../toolKitSlice\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    toolkitReduce: toolkitReducer\r\n})\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename='/weather_app'>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"load\":\"style_load__1E9Rz\",\"move\":\"style_move__10wyp\"};"],"sourceRoot":""}